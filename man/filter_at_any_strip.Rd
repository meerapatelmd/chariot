% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format.R
\name{filter_at_any_strip}
\alias{filter_at_any_strip}
\title{Filter At Any Strip}
\usage{
filter_at_any_strip(data, strip_cols, ...)
}
\description{
Filter At Any Strip
}
\examples{
library(tidyverse)
library(chariot)

conn <- connectAthena()
test_data <-
        queryAthena("SELECT * FROM omop_vocabulary.concept ORDER BY RANDOM() LIMIT 20;",
                    conn = conn)

# Merge
merge_strip(data = test_data,
            into = "concept")

# Merge while sparing some original columns such as vocabulary_id and
# concept_class_id
merge_strip(data = test_data,
            into = "concept",
            vocabulary_id,
            concept_class_id)



# Test filtering of strip columns
test_output <- merge_strip(data = test_data,
                        into = "concept") \%>\%
                dplyr::select(-concept_id)

# Filter at a Strip Column
filter_strip(test_output,
             strip_col = concept,
             vocabulary_id \%in\% c("SNOMED"))

# Filter at more than 1 Strip Column
test_data <-
        dplyr::bind_cols(test_output \%>\%
                                 rubix::randomize() \%>\%
                                 dplyr::select(concept_a = concept),
                         test_output \%>\%
                                 rubix::randomize() \%>\%
                                 dplyr::select(concept_b = concept))

filter_at_all_strip(data = test_data,
                strip_cols = c("concept_a",
                               "concept_b"),
                vocabulary_id \%in\% c("RxNorm"))

filter_at_any_strip(data = test_data,
                    strip_cols = c("concept_a",
                                   "concept_b"),
                    vocabulary_id \%in\% c("RxNorm"))

dcAthena(conn = conn)
}
