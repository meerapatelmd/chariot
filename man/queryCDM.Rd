% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/x_sql.R
\name{queryCDM}
\alias{queryCDM}
\title{Query the Common Data Model with Annotations}
\usage{
queryCDM(
  sql_statement,
  write_schema = "patelm9",
  vocab_schema = "omop_vocabulary",
  conn,
  conn_fun = "connectAthena()",
  skip_cache = FALSE,
  override_cache = FALSE,
  cache_only = FALSE,
  cache_resultset = TRUE,
  render_sql = TRUE,
  render_only = FALSE,
  verbose = TRUE,
  sleepTime = 1
)
}
\arguments{
\item{sql_statement}{SQL query}

\item{write_schema}{Schema to write the staged data to for a join to Concept
table.}

\item{vocab_schema}{Schema where to Concept table can be found.}

\item{conn}{Connection object. If provided, diverts queries
to the connection instead of the local Athena instance without caching
features.}

\item{skip_cache}{Skip the caching altogether and directly
query the database.}

\item{override_cache}{If TRUE, the cache will not be loaded and will
be overwritten by a new query. For override_cache to take effect,
skip_cache should be FALSE.}

\item{cache_only}{Loads from the cache and does not query the
database. A NULL object is returned if a resultset was not cached.}

\item{cache_resultset}{(deprecated) If TRUE, the resultset from the
query will first be loaded from the cache. The query will be executed if a
cached resultset is not retrieved for this particular query, after which the
resultset will be cached. If FALSE, Athena or conn will be directly queried
without any caching operations.}

\item{render_sql}{If TRUE, the SQL will be printed back in the
console prior to execution. Default: FALSE}

\item{verbose}{If TRUE, prints loading and querying operations
messages to the console. Default: FALSE}

\item{sleepTime}{Argument for `Sys.sleep()` in between queries to
allow for halting function execution, especially in cases where other chariot
functions are executing multiple queries in succession and require
cancellation.}
}
\value{
a [tibble][tibble::tibble-package]
}
\description{
Query a Common Data Model table with automatic joins with any Concept Id to
the Concept table with the appropriate prefix.
}
\examples{
library(pg13)
library(tidyverse)

conn <- local_connect("polyester")

queryCDM(sql_statement = "SELECT * FROM omop_cdm.drug_exposure ORDER BY RANDOM() LIMIT 5;",
         write_schema = "omop_cdm",
         vocab_schema = "omop_cdm",
         conn = conn)

dc(conn = conn)
}
\seealso{
\code{\link[rlang]{parse_expr}}
 \code{\link[stringr]{str_remove}}
 \code{\link[dplyr]{select_all}},\code{\link[dplyr]{vars}},\code{\link[dplyr]{reexports}},\code{\link[dplyr]{mutate-joins}}

Other query functions: 
\code{\link{executeAthena}()},
\code{\link{queryAncestors}()},
\code{\link{queryCode}()},
\code{\link{queryConceptClassRelationships}()},
\code{\link{queryConceptId}()},
\code{\link{queryDescendants}()},
\code{\link{queryRelationships}()},
\code{\link{querySynonyms}()},
\code{\link{queryVocabularyRelationships}()}
}
\concept{query functions}
